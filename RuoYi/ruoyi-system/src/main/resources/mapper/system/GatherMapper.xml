<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.GatherMapper">

    <resultMap type="Gather" id="GatherResult">
        <result property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="quarter" column="quarter"/>
        <result property="area" column="area"/>
        <result property="deptName" column="dept_name"/>
        <result property="salesManager" column="sales_manager"/>
        <result property="media" column="media"/>
        <result property="quotas" column="quotas"/>
        <result property="summation" column="summation"/>
        <result property="xhptAmt" column="xhptAmt"/>
        <result property="timeSchedule" column="timeSchedule"/>
        <result property="xhwcRate" column="xhwcRate"/>
        <result property="term" column="term"/>
    </resultMap>

    <select id="selectGatherList" parameterType="Gather" resultMap="GatherResult">
        SELECT type,quarter,area,dept_name,sales_manager,media,quotas,summation,xhwcRate,term from (
        SELECT
        tb1.type,
        tb1.quarter,
        tb1.area,
        tb1.dept_name,
        tb1.sale_manager sales_manager,
        tb1.media,
        tb1.quotas,
        IFNULL( tb2.summation, '0' ) summation,
        tb2.term,
        concat( round( IFNULL( tb2.summation, '0' ) / tb1.quotas * 100, 2 ), '%' ) xhwcRate
        FROM
        (
        SELECT
        c.type,
        c.quarter,
        c.area,
        c.dept_name,
        c.sale_manager,
        c.media,
        IFNULL( sum( c.quotas ), '0' ) quotas
        FROM
        yw_task c
        GROUP BY
        c.sale_manager,
        c.media,
        c.quarter
        HAVING
        c.type = '消耗'
        <if test="quarter != null and quarter != ''">and c.quarter= #{quarter}</if>
        ) tb1
        LEFT JOIN (
        SELECT
        d.sale_manager,
        d.media,
        d.quarter,
        sum( d.summation ) summation,
        d.term
        FROM
        yw_consumption d
        GROUP BY
        d.sale_manager,
        d.media,
        d.quarter
        ) tb2 ON tb1.sale_manager = tb2.sale_manager
        AND tb1.media = tb2.media AND tb1.quarter = tb2.quarter
        union
        SELECT
        '消耗',
        tb2.quarter,
        tb1.area,
        tb1.dept_name,
        tb2.sale_manager sales_manager,
        tb2.media,
        tb1.quotas,
        IFNULL( tb2.summation, '0' ) summation,
        tb2.term,
        concat( round( IFNULL( tb2.summation, '0' ) / tb1.quotas * 100, 2 ), '%' ) xhwcRate
        FROM
        (
        SELECT
        c.type,
        c.quarter,
        c.area,
        c.dept_name,
        c.sale_manager,
        c.media,
        IFNULL( sum( c.quotas ), '0' ) quotas
        FROM
        yw_task c
        GROUP BY
        c.sale_manager,
        c.media,
        c.quarter
        HAVING
        c.type = '消耗'
        ) tb1
        RIGHT JOIN (
        SELECT
        d.sale_manager,
        d.media,
        d.quarter,
        sum( d.summation ) summation,
        d.term
        FROM
        yw_consumption d
        GROUP BY
        d.sale_manager,
        d.media,
        d.quarter
        <if test="quarter != null and quarter != ''">HAVING d.quarter= #{quarter}</if>
        ) tb2 ON tb1.sale_manager = tb2.sale_manager
        AND tb1.media = tb2.media AND tb1.quarter = tb2.quarter
        ) tb3
    </select>

    <resultMap id="YwGatherGrossMarginResult" type="YwRankGrossMargin">
        <result column="rownum" property="rownum"/>
        <result column="sale_manager" property="saleManager"/>
        <result column="quotas" property="quotas"/>
        <result column="gross_margin" property="grossMargin"/>
        <result column="rate" property="rate"/>
    </resultMap>

    <select id="selectRankGrossMarginList" resultMap="YwGatherGrossMarginResult">

        select rownum,sale_manager,quotas,gross_margin,rate from (
        select a.sale_manager,a.quotas,a.gross_margin,a.rate,@rownum := @rownum + 1 rownum from (
        select tb1.sale_manager,tb1.quotas,tb2.gross_margin,concat(round(tb2.gross_margin/tb1.quotas*100,2),'%') rate from
        (select ta.sale_manager,ifnull(sum(ta.quotas),'0') quotas from yw_task ta group by ta.sale_manager,ta.type having ta.type = '毛利' ) tb1
        left join
        (select gm.sales_manager,sum(gm.gross_margin) gross_margin from yw_gross_margins gm group by gm.sales_manager) tb2
        on tb1.sale_manager = tb2.sales_manager order by rate
        ) a,(SELECT @rownum := 0) b) c

    </select>



    <resultMap id="YwGatherConsumptionResult" type="YwGatherConsumption">
        <result column="rownum" property="rownum"/>
        <result column="sale_manager" property="saleManager"/>
        <result column="quotas" property="quotas"/>
        <result column="summation" property="summation"/>
        <result column="rate" property="rate"/>
    </resultMap>

    <select id="selectRankConsumptionList" resultMap="YwGatherConsumptionResult">

        select rownum,sale_manager,quotas,summation,rate from (
        select a.sale_manager,a.quotas,a.summation,a.rate,@rownum := @rownum + 1 rownum from (
        select tb1.sale_manager,tb1.quotas,tb2.summation,concat(round(tb2.summation/tb1.quotas*100,2),'%') rate from
        (select ta.sale_manager,ifnull(sum(ta.quotas),'0') quotas from yw_task ta group by ta.sale_manager,ta.type having ta.type = '消耗' ) tb1
        left join
        (select con.sale_manager,sum(con.summation) summation from yw_consumption con group by con.sale_manager) tb2
        on tb1.sale_manager = tb2.sale_manager order by rate
        ) a,(SELECT @rownum := 0) b) c

    </select>

    <resultMap id="grossMarginGatherResult" type="YwGrossMarginGather">
        <result column="sale_manager" property="saleManager"/>
        <result column="quarter" property="quarter"/>
        <result column="gross_margin" property="grossMargin"/>
        <result column="quotas" property="quotas"/>
        <result column="term" property="term"/>
        <result column="area" property="area"/>
        <result column="dept_name" property="deptName"/>
        <result column="media" property="media"/>
    </resultMap>

    <select id="selectGrossMarginGatherGroup" parameterType="YwGrossMarginGather" resultMap="grossMarginGatherResult">
        SELECT
            d.sales_manager sale_manager,
            d.media,
            d.quarter,
            sum( d.gross_margin ) gross_margin,
            d.term
        FROM
            yw_gross_margins d
        <where>
            <if test="saleManager != null and saleManager != ''">
                and d.sales_manager = #{saleManager}
            </if>
            <if test="quarter != null and quarter != ''">
                and d.quarter = #{quarter}
            </if>
            <if test="media != '全媒体' and media != null and media != ''">
                and d.media = #{media}
            </if>
        </where>
        GROUP BY
            d.sales_manager,
            <if test="media != '全媒体'">
                d.media,
            </if>
            d.quarter

    </select>

    <select id="selectNoTaskGatherGross" parameterType="YwGrossMarginGather" resultMap="grossMarginGatherResult">
        select
            gm.sales_manager sale_manager,
            gm.media,
            gm.quarter,
            sum( gm.gross_margin ) gross_margin,
            gm.term
        from yw_gross_margins gm
            left join yw_task ta on gm.quarter = ta.quarter and gm.sales_manager = ta.sale_manager
            <if test="media != '全媒体'">
                and gm.media = ta.media
            </if>
        where ta.id is null
         <if test="quarter != null and quarter != ''">
             and gm.quarter = #{quarter}
         </if>
         group by gm.quarter,gm.sales_manager
        <if test="media != '全媒体'">
            ,gm.media
        </if>

    </select>

    <select id="selectGrossMarginGatherList" parameterType="YwGrossMarginGather" resultMap="grossMarginGatherResult">
        select tb1.sales_manager sale_manager,tb1.quarter,ifnull(tb1.gross_margin,0) gross_margin,ifnull(tb2.quotas,0) quotas,tb1.term from
        (select gm.sales_manager,ifnull(sum(gm.gross_margin),0) gross_margin,gm.quarter,gm.term from yw_gross_margins gm group by gm.quarter,gm.sales_manager<if
            test="quarter != null and quarter != ''"> having gm.quarter = #{quarter}</if>) tb1
        left join
        (select ta.sale_manager,ifnull(sum(ta.quotas),0) quotas,ta.quarter from yw_task ta group by ta.type,ta.quarter,ta.sale_manager having ta.type = '毛利'<if
            test="quarter != null and quarter != ''"> and ta.quarter = #{quarter}</if>) tb2
        on tb1.quarter = tb2.quarter and tb1.sales_manager = tb2.sale_manager
        union
        select tb2.sale_manager,tb2.quarter,ifnull(tb1.gross_margin,0) gross_margin,ifnull(tb2.quotas,0) quotas,tb1.term from
        (select gm.sales_manager,ifnull(sum(gm.gross_margin),0) gross_margin,gm.quarter,gm.term from yw_gross_margins gm group by gm.quarter,gm.sales_manager<if
            test="quarter != null and quarter != ''"> having gm.quarter = #{quarter}</if>) tb1
        right join
        (select ta.sale_manager,ifnull(sum(ta.quotas),0) quotas,ta.quarter from yw_task ta group by ta.type,ta.quarter,ta.sale_manager having ta.type = '毛利' <if
            test="quarter != null and quarter != ''"> and ta.quarter = #{quarter}</if>) tb2
        on tb1.quarter = tb2.quarter and tb1.sales_manager = tb2.sale_manager
    </select>

    <select id="selectGatherTask" parameterType="YwGrossMarginGather" resultMap="grossMarginGatherResult">
        SELECT
        c.type,
        c.quarter,
        c.area,
        c.dept_name,
        c.sale_manager,
        c.media,
        IFNULL( sum( c.quotas ), '0' ) quotas
        FROM
        yw_task c
        GROUP BY
        c.sale_manager,
        c.media,
        c.quarter
        HAVING
        c.type = '毛利'
        <if test="quarter != null and quarter != ''">
            and c.quarter = #{quarter}
        </if>
        <if test="saleManager != null and saleManager != ''">
            and c.sale_manager = #{saleManager}
        </if>
    </select>

</mapper>