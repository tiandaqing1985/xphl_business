<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TotalGatherMapper">

    <resultMap id="YwTotalGatherResult" type="YwTotalGather">
        <result column="dept_name" property="deptName"/>
        <result column="quotasGrossMargin" property="quotasGrossMargin"/>
        <result column="quotasConsumption" property="quotasConsumption"/>
        <result column="totalSummation" property="totalSummation"/>
        <result column="totalGrossMargin" property="totalGrossMargin"/>
        <result column="consumptionRate" property="consumptionRate"/>
        <result column="grossMarginRate" property="grossMarginRate"/>
    </resultMap>

    <select id="selectTotalGather" resultMap="YwTotalGatherResult" parameterType="YwTotalGather">
        SELECT
        dept_name,
        quotasConsumption,
        quotasGrossMargin,
        totalSummation,
        totalGrossMargin,
        concat( round( totalSummation / quotasConsumption * 100, 2 ), '%' ) consumptionRate,
        concat( round( totalGrossMargin / quotasGrossMargin * 100, 2 ), '%' ) grossMarginRate
        FROM (
        SELECT
        tb2.dept_name,
        IFNULL(tb1.quotasConsumption,0.00) quotasConsumption,
        IFNULL(tb2.quotasGrossMargin,0.00) quotasGrossMargin,
        IFNULL(tb5.totalSummation,0.00) totalSummation,
        IFNULL(tb6.totalGrossMargin,0.00) totalGrossMargin
        FROM
        (SELECT
        ta.dept_name,
        ta.type,
        IFNULL(sum( ta.quotas ),'0') quotasConsumption
        FROM
        yw_task ta
        GROUP BY
        ta.dept_name,ta.type,ta.quarter
        HAVING ta.type = '消耗' <if test="quarter != null and quarter != ''">AND ta.quarter = #{quarter}</if>) tb1
        LEFT JOIN
        (SELECT
        ta.dept_name,
        ta.type,
        IFNULL(sum( ta.quotas ),'0') quotasGrossMargin
        FROM
        yw_task ta
        GROUP BY
        ta.dept_name,ta.type,ta.quarter
        HAVING ta.type = '毛利' <if test="quarter != null and quarter != ''">AND ta.quarter = #{quarter}</if>) tb2
        ON tb1.dept_name = tb2.dept_name
        LEFT JOIN
        (select tb4.dept_name,IFNUll(sum(tb4.totalSummation),0.00) totalSummation from (select
        tb3.sale_manager,tb3.dept_name,IFNUll(sum(con.summation),0.00) totalSummation from yw_consumption con right join
        (
        select sale_manager,quarter,dept_name from yw_task group by sale_manager,quarter,type having type = '消耗' <if test="quarter != null and quarter != ''">AND quarter = #{quarter}</if>) tb3 on con.sale_manager = tb3.sale_manager group by tb3.sale_manager) tb4 group by dept_name)
        tb5 on tb2.dept_name = tb5.dept_name
        LEFT JOIN
        (select tb4.dept_name,IFNUll(sum(tb4.totalGrossMargin),0.00) totalGrossMargin from (select
        tb3.sale_manager,tb3.dept_name,IFNUll(sum(con.gross_margin),0.00) totalGrossMargin from yw_gross_margins con
        right join (
        select sale_manager,quarter,dept_name from yw_task group by sale_manager,quarter,type having type = '毛利' <if test="quarter != null and quarter != ''">AND quarter = #{quarter}</if>) tb3 on con.sales_manager = tb3.sale_manager group by tb3.sale_manager) tb4 group by
        dept_name) tb6 on tb2.dept_name = tb6.dept_name

        UNION

        SELECT
        tb2.dept_name,
        IFNULL(tb1.quotasConsumption,0.00) quotasConsumption,
        IFNULL(tb2.quotasGrossMargin,0.00) quotasGrossMargin,
        IFNULL(tb5.totalSummation,0.00) totalSummation,
        IFNULL(tb6.totalGrossMargin,0.00) totalGrossMargin
        FROM
        (SELECT
        ta.dept_name,
        ta.type,
        IFNULL(sum( ta.quotas ),'0') quotasConsumption
        FROM
        yw_task ta
        GROUP BY
        ta.dept_name,ta.type,ta.quarter
        HAVING ta.type = '消耗' <if test="quarter != null and quarter != ''">AND ta.quarter = #{quarter}</if>) tb1
        RIGHT JOIN
        (SELECT
        ta.dept_name,
        ta.type,
        IFNULL(sum( ta.quotas ),'0') quotasGrossMargin
        FROM
        yw_task ta
        GROUP BY
        ta.dept_name,ta.type,ta.quarter
        HAVING ta.type = '毛利' <if test="quarter != null and quarter != ''">AND ta.quarter = #{quarter}</if>) tb2
        ON tb1.dept_name = tb2.dept_name
        LEFT JOIN
        (select tb4.dept_name,IFNUll(sum(tb4.totalSummation),0.00) totalSummation from (select
        tb3.sale_manager,tb3.dept_name,IFNUll(sum(con.summation),0.00) totalSummation from yw_consumption con right join
        (
        select sale_manager,quarter,dept_name from yw_task group by sale_manager,quarter,type having type = '消耗' <if test="quarter != null and quarter != ''">AND quarter = #{quarter}</if>) tb3 on con.sale_manager = tb3.sale_manager group by tb3.sale_manager) tb4 group by dept_name)
        tb5 on tb2.dept_name = tb5.dept_name
        LEFT JOIN
        (select tb4.dept_name,IFNUll(sum(tb4.totalGrossMargin),0.00) totalGrossMargin from (select
        tb3.sale_manager,tb3.dept_name,IFNUll(sum(con.gross_margin),0.00) totalGrossMargin from yw_gross_margins con
        right join (
        select sale_manager,quarter,dept_name from yw_task group by sale_manager,quarter,type having type = '毛利' <if test="quarter != null and quarter != ''">AND quarter = #{quarter}</if>) tb3 on con.sales_manager = tb3.sale_manager group by tb3.sale_manager) tb4 group by
        dept_name) tb6 on tb2.dept_name = tb6.dept_name
        ) T
    </select>

    <resultMap id="YwGatherGrossMarginResult" type="YwGatherGrossMargin">
        <result column="rownum" property="rownum"/>
        <result column="sale_manager" property="saleManager"/>
        <result column="quotas" property="quotas"/>
        <result column="gross_margin" property="grossMargin"/>
        <result column="rate" property="rate"/>
    </resultMap>

    <select id="selectRankGrossMarginList" resultMap="YwGatherGrossMarginResult" parameterType="YwGatherGrossMargin">

        select rownum,sale_manager,ifnull(quotas,0.0) quotas,ifnull(gross_margin,0.0) gross_margin,rate from (
        select a.sale_manager,a.quotas,a.gross_margin,a.rate,@rownum := @rownum + 1 rownum from (
        select tb1.sale_manager,tb1.quotas,tb2.gross_margin,concat(round(tb2.gross_margin/tb1.quotas*100,2),'%') rate from
        (select ta.quarter,ta.sale_manager,ifnull(sum(ta.quotas),'0') quotas from yw_task ta group by ta.sale_manager,ta.type,ta.quarter having ta.type = '毛利' <if
            test="quarter != null and quarter != ''">AND ta.quarter = #{quarter}</if>) tb1
        left join
        (select gm.quarter,gm.sales_manager,sum(gm.gross_margin) gross_margin from yw_gross_margins gm group by gm.sales_manager,gm.quarter<if
            test="quarter != null and quarter != ''"> having gm.quarter = #{quarter}</if>) tb2
        on tb1.sale_manager = tb2.sales_manager and tb1.quarter = tb2.quarter order by rate desc
        ) a,(SELECT @rownum := 0) b) c

    </select>

    <resultMap id="YwGatherConsumptionResult" type="YwGatherConsumption">
        <result column="rownum" property="rownum"/>
        <result column="sale_manager" property="saleManager"/>
        <result column="quotas" property="quotas"/>
        <result column="summation" property="summation"/>
        <result column="rate" property="rate"/>
    </resultMap>

    <select id="selectRankConsumptionList" resultMap="YwGatherConsumptionResult" parameterType="YwGatherConsumption">

        select rownum,sale_manager,ifnull(quotas,0.0) quotas,ifnull(summation,0.0) summation,rate from (
        select a.sale_manager,a.quotas,a.summation,a.rate,@rownum := @rownum + 1 rownum from (
        select tb1.sale_manager,tb1.quotas,tb2.summation,concat(round(tb2.summation/tb1.quotas*100,2),'%') rate from
        (select ta.quarter,ta.sale_manager,ifnull(sum(ta.quotas),'0') quotas from yw_task ta group by ta.sale_manager,ta.type having ta.type = '消耗' <if
            test="quarter != null and quarter != ''">AND ta.quarter = #{quarter}</if> ) tb1
        left join
        (select con.quarter,con.sale_manager,sum(con.summation) summation from yw_consumption con group by con.sale_manager,con.quarter <if
            test="quarter != null and quarter != ''"> having con.quarter = #{quarter}</if>) tb2
        on tb1.sale_manager = tb2.sale_manager and tb1.quarter = tb2.quarter order by rate desc
        ) a,(SELECT @rownum := 0) b) c

    </select>
    
</mapper>